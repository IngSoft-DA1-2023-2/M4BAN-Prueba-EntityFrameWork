// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(RegistroDB))]
    [Migration("20231101115005_InitialRegistroDB")]
    partial class InitialRegistroDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProyectoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProyectoId");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            ProyectoId = 1,
                            Nombre = "Proyecto 1"
                        },
                        new
                        {
                            ProyectoId = 2,
                            Nombre = "Proyecto 2"
                        });
                });

            modelBuilder.Entity("Backend.RegistroHora", b =>
                {
                    b.Property<int>("RegistroHoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistroHoraId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorasTrabajadas")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RegistroHoraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistrosHora");

                    b.HasData(
                        new
                        {
                            RegistroHoraId = 1,
                            Descripcion = "Trabajo 1",
                            HorasTrabajadas = 8,
                            UsuarioId = 1
                        },
                        new
                        {
                            RegistroHoraId = 2,
                            Descripcion = "Trabajo 2",
                            HorasTrabajadas = 7,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("Backend.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Nombre = "Usuario 1",
                            ProyectoId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            Nombre = "Usuario 2",
                            ProyectoId = 2
                        });
                });

            modelBuilder.Entity("Backend.RegistroHora", b =>
                {
                    b.HasOne("Backend.Usuario", "Usuario")
                        .WithMany("RegistrosHora")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Backend.Usuario", b =>
                {
                    b.HasOne("Backend.Proyecto", "Proyecto")
                        .WithMany("Usuarios")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Backend.Proyecto", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Backend.Usuario", b =>
                {
                    b.Navigation("RegistrosHora");
                });
#pragma warning restore 612, 618
        }
    }
}
